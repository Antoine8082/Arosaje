{% extends 'base.html.twig' %}
{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('assets/css/detail.css') }}">
{% endblock %}
{% block body %}
    {% if app.user.id == post.userPost.id %}
        <label for="guardian">Gardien :</label>
        {% if post.guardian %}
            <input type="text" id="guardian" value="{{ post.guardian.email }}" disabled>
        {% else %}
            <input type="text" id="guardian">
        {% endif %}
    {% endif %}
    <span id="res_fetch_guardian"></span>
    {% set imagePath = '/uploads/images/' ~ post.image %}
    <h3>{{ post.title }}</h3>
    <p>{{ post.description }}</p>
    <div class="image">
        <img src="{{ imagePath }}" alt="" id="img_card">
    </div>
    <section>
        <h3>Espace commentaire</h3>
        <textarea id="comment" name="comment"
              rows="5" cols="33">
        </textarea>
        <button id="btn-comment">Envoyer</button>

            <div id="comments-container">
                {% for comment in post.comments %}
                <div class="comment-card {% if comment.type == "BOT"%}{% endif %}">
                    <div class="author" id="card_author">{{ comment.userComment.email }}</div>
                    <div class="dateSend" id="card_date">{{ comment.sendDate|date }}</div>
                    <div class="comment-content" id="card_content">{{ comment.content }}</div>
                {% endfor %}
            </div>
            <template id="comment-area">
                <div class="comment-card">
                    <div class="author" id="card_author"></div>
                    <div class="dateSend" id="card_date"></div>
                    <div class="comment-content" id="card_content"></div>
                </div>
            </template>

    </section>
    <script>
        const inputGuard = document.querySelector('#guardian')
        const btnComment = document.querySelector('#btn-comment');
        btnComment.addEventListener('click',()=>{
            sendComment();
        })
        inputGuard.addEventListener('change', ()=> {
           if(inputGuard.value.length >= 4){
               setGuardian(inputGuard.value)
           }
        });
        function setGuardian(inputGuardVal){
            const opts = {
                method : "POST",
                body : JSON.stringify({
                    post : {{ post.id }},
                    guardian : inputGuardVal
                }),
            };
            fetch('/api/guardian',opts)
                .then((res)=>res.json())
                .then((res) => {
                    const txt = document.querySelector('#res_fetch_guardian');
                    if(res.true){
                        txt.textContent = "Success !"
                        txt.classList.add('success')
                        txt.classList.remove('error')
                    }else{
                        txt.textContent = "Unknown user"
                        txt.classList.add('error')
                        txt.classList.remove('success')
                    }
                } );
        }
        function sendComment(){
            const contentComment = document.querySelector('#comment').value
            const opts = {
                method : "POST",
                body : JSON.stringify({
                    post : {{ post.id }},
                    sender : {{ app.user.id }},
                    content : contentComment
                })
            };
            fetch('/api/addComment',opts)
                .then(res => res.json())
                .then(res => {
                    buildCommentPart()
                })
        }
        function fetchComments(){
            const opts = {
                method : "POST",
                body : JSON.stringify({
                    post : {{ post.id }},
                })
            };
        }
        function buildCommentPart(){
                const template = document.querySelector('#comment-area')
                const clone = template.content.cloneNode(true);
                const contentComment = document.querySelector('#comment').value
                const author = clone.querySelector('#card_author');
                const date = clone.querySelector('#card_date');
                const content = clone.querySelector('#card_content')
                author.textContent = "{{ app.user.email }}";
                date.textContent =new Date().toLocaleString();
                content.textContent = contentComment;
                document.querySelector('#comments-container').appendChild(clone);
        }
    </script>
{% endblock %}